# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env:
#   SHA: $(git rev-parse HEAD)

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: echo SHA
      run: echo "$(git rev-parse HEAD)"

    - name: Build the client image
      run: docker build -t mahmoudhamra/multi-client:latest -t mahmoudhamra/multi-client:$(git rev-parse HEAD) -f ./client/Dockerfile ./client
    - name: Build the server image
      run: docker build -t mahmoudhamra/multi-server:latest -t mahmoudhamra/multi-server:$(git rev-parse HEAD) -f ./server/Dockerfile ./server
    - name: Build the worker image
      run: docker build -t mahmoudhamra/multi-worker:latest -t mahmoudhamra/multi-worker:$(git rev-parse HEAD) -f ./worker/Dockerfile ./worker



    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}


    - name: push client image to DockerHub
      run: |
        docker push mahmoudhamra/multi-client:latest
        docker push mahmoudhamra/multi-client:$(git rev-parse HEAD)

    - name: push server image to DockerHub
      run: |
        docker push mahmoudhamra/multi-server:latest
        docker push mahmoudhamra/multi-server:$(git rev-parse HEAD)

    - name: push worker image to DockerHub
      run: |
        docker push mahmoudhamra/multi-worker:latest
        docker push mahmoudhamra/multi-worker:$(git rev-parse HEAD)


    - name: 'Install OCI CLI'
      run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults
          echo "::add-path::/home/runner/bin"
          exec -l $SHELL
          
    - name: Fix Config File Permissions
      run: |
          oci setup repair-file-permissions --file ~/.oci/key.pem
          oci setup repair-file-permissions --file ~/.oci/config

    - name: update deployment config files
      run: |
        kubectl set image deployments/server-deployment server=mahmoudhamra/multi-server:$(git rev-parse HEAD)
        kubectl set image deployments/client-deployment server=mahmoudhamra/multi-client:$(git rev-parse HEAD)
        kubectl set image deployments/worker-deployment server=mahmoudhamra/multi-worker:$(git rev-parse HEAD)


    - name: Download the KUBECONFIG
      run: |
        mkdir -p $HOME/.kube
        oci ce cluster create-kubeconfig --cluster-id ocid1.cluster.oc1.me-jeddah-1.aaaaaaaadiktzwqydhntyfarf67ltbx47thyeouaflefgbnqncgdujiqhrna --file $HOME/.kube/config --region me-jeddah-1 --token-version 2.0.0  --kube-endpoint PUBLIC_ENDPOINT
        export KUBECONFIG=$HOME/.kube/config











    # - name: Login to DockerHub Registry
    #   run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin